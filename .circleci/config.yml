version: 2.1

orbs:
  slack: circleci/slack@4.10.1


commands:
  notify_on_failure:
    steps:
      - slack/notify:          
          channel: 04-finish-line
          event: fail
          template: basic_fail_1

  destroy_environment:
    steps:
      - run:
          name: destroy environment
          command: |
            aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}

jobs:

  create_backend_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - run:
          name: create backend infrastructure
          command: |
            aws cloudformation deploy \
            --template-file .circleci/files/backend.yml \
            --stack-name "udapeople-backend-${CIRCLE_WORKFLOW_ID:0:7}" \
            --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"  \
            --tags project=udapeople

  
  create_frontend_infrastructure: 
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Install tar utility
          command: |
            yum install -y tar gzip
      - run:
          name: create frontend infrastructure
          command: |
            aws cloudformation deploy \
            --template-file .circleci/files/frontend.yml \
            --stack-name "udapeople-frontend-${CIRCLE_WORKFLOW_ID:0:7}" \
            --parameter-overrides ID="${CIRCLE_WORKFLOW_ID:0:7}"  \
            --tags project=udapeople
            aws ec2 describe-instances \
            --query 'Reservations[*].Instances[*].PublicIpAddress' \
            --output text >>.circleci/ansible/inventory.txt


#for congratulations (Y)
  notify_on_success:
    docker:
      - image: cimg/base:stable
    steps:
      - slack/notify:
          channel: 04-finish-line
          event: pass
          template: success_tagged_deploy_1

# Sequential workflow
workflows:
  # Name the workflow
  myWorkflow:
    jobs:
      - create_backend_infrastructure
      - create_frontend_infrastructure
