version: 2.1

orbs:
  slack: circleci/slack@4.10.1


commands:
  notify_on_failure:
    steps:
      - slack/notify:
          event: fail
          channel: 04-finish-line
          template: basic_fail_1


jobs:
  build_frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          command: |
            cd frontend
            npm install
      - save_cache:
          key: "frontend.npm.packages"
          paths:
            - frontend/src/node_modules 
      - restore_cache:
          keys:
            - "frontend.npm.packages"  
      - run:
          command: |
            cd frontend
            npm run build   
      - notify_on_failure

  
  build_backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - run:
          command: |
            cd backend
            npm install      
      - save_cache:
          key: "backend.npm.packages"
          paths:
            - backend/src/node_modules
      - restore_cache:
          keys:
            - "backend.npm.packages"
      - run:
          command: |
            cd backend
            npm run build 
      - notify_on_failure


  test_frontend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout 
      - restore_cache:
          keys:
            - "frontend.npm.packages"  
      - run:
          command: |
            cd frontend
#            npm install
            npm run test  
      - notify_on_failure

  
  test_backend:
    docker:
      - image: circleci/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys:
            - "backend.npm.packages"
      - run:
          command: |
            cd backend
#            npm install
            npm run test 
      - notify_on_failure

  
  #for congratulations (Y)
  notify_on_success:
    docker:
      - image: cimg/base:stable
    steps:
      - slack/notify:
          event: pass
          channel: 04-finish-line
          template: success_tagged_deployment_1


workflows:
  my_workflow:
    jobs:
      - build_frontend
      - build_backend
      - test_frontend:
          requires:
            - build_frontend
      - test_backend:
          requires:
            - build_backend

      #for congratulations (Y)
      - notify_on_success:
          requires:
            - build_frontend
            - build_backend
            - test_frontend
            - test_backend
